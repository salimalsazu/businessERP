generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId     String     @id @default(uuid())
  email      String     @unique
  password   String
  userStatus UserStatus @default(Pending)
  createdAt  DateTime   @default(now()) @db.Timestamptz(0)
  updatedAt  DateTime   @updatedAt @db.Timestamptz(0)
  profileId  String?    @unique
  profile    Profile?   @relation(fields: [profileId], references: [profileId])
  userFood   UserFood[]

  @@map("users")
}

model Profile {
  profileId    String    @id @default(uuid())
  firstName    String
  lastName     String
  profileImage String?
  role         UserRoles @default(USER)
  isMeal       isMeal    @default(Yes)
  createdAt    DateTime  @default(now()) @db.Timestamptz(0)
  updatedAt    DateTime  @updatedAt @db.Timestamptz(0)
  User         User?

  @@map("profiles")
}

model Foods {
  foodExpId    String     @id @default(uuid())
  totalCost    Int
  foodExpDate  DateTime   @db.Timestamptz(0)
  totalMeal    Int
  employeeCost Int
  mealRate     Int
  createdAt    DateTime   @default(now()) @db.Timestamptz(0)
  updatedAt    DateTime   @updatedAt @db.Timestamptz(0)
  userFood     UserFood[]

  @@map("foods")
}

model UserFood {
  userFoodId String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [userId])
  food       Foods    @relation(fields: [foodExpId], references: [foodExpId])
  userId     String
  foodExpId  String
  createdAt  DateTime @default(now()) @db.Timestamptz(0)

  @@map("user_foods")
}

model StationaryItemList {
  stationaryListId String          @id @default(uuid())
  purchaseDate     DateTime        @db.Timestamptz(0)
  lastAssignedDate DateTime        @db.Timestamptz(0)
  assignQuantity   Int
  purchaseQuantity     Int
  stockQuantity    Int
  stationaryItemId String
  status itemStatus
  stationaryItem   StationaryItem? @relation(fields: [stationaryItemId], references: [stationaryItemId])
  createdAt        DateTime        @default(now()) @db.Timestamptz(0)
  updatedAt        DateTime        @updatedAt @db.Timestamptz(0)

  @@map("stationary_list")
}

model StationaryItem {
  stationaryItemId   String               @id @default(uuid())
  itemName           String               @unique
  createdAt          DateTime             @default(now()) @db.Timestamptz(0)
  updatedAt          DateTime             @updatedAt @db.Timestamptz(0)
  StationaryItemList StationaryItemList[]

  @@map("stationary_item")
}

enum UserRoles {
  SUPERADMIN
  ADMIN
  USER
}

enum UserStatus {
  Active
  Paused
  Suspended
  Pending
}

enum isMeal {
  Yes
  No
}

enum itemStatus {
  Excellent
  Good
  Poor
}
